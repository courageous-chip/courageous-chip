// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ExerciseList /> renders as empty 1`] = `
<View
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    collapsable={true}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          },
          Object {
            "backgroundColor": "rgb(242, 242, 242)",
          },
        ]
      }
    >
      <Text
        style={
          Object {
            "fontSize": 72,
          }
        }
      >
        ü§∑‚Äç‚ôÄÔ∏è
      </Text>
    </View>
  </View>
</View>
`;

exports[`<ExerciseList /> renders as loading 1`] = `
<View
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    collapsable={true}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          },
          Object {
            "backgroundColor": "rgb(242, 242, 242)",
          },
        ]
      }
    >
      <Text
        style={
          Object {
            "fontSize": 72,
          }
        }
      >
        ü§î
      </Text>
    </View>
  </View>
</View>
`;

exports[`<ExerciseList /> renders exercises 1`] = `
<View
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    collapsable={true}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
          },
          Object {
            "backgroundColor": "rgb(242, 242, 242)",
          },
        ]
      }
    >
      <ScrollView
        data={
          Array [
            Object {
              "__typename": "Exercise",
              "id": "1",
              "name": "üèãÔ∏è‚Äç‚ôÄÔ∏è Deadlift",
            },
          ]
        }
        disableVirtualization={false}
        horizontal={false}
        initialNumToRender={10}
        maxToRenderPerBatch={10}
        numColumns={1}
        onEndReachedThreshold={2}
        removeClippedSubviews={false}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <View
          style={null}
        >
          <TouchableOpacity
            activeOpacity={0.2}
            style={
              Array [
                Object {
                  "justifyContent": "center",
                  "minHeight": 64,
                },
                Object {
                  "backgroundColor": "rgb(255, 255, 255)",
                },
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "marginHorizontal": 20,
                  },
                  Object {
                    "color": "rgb(28, 28, 30)",
                  },
                ]
              }
            >
              üèãÔ∏è‚Äç‚ôÄÔ∏è Deadlift
            </Text>
          </TouchableOpacity>
        </View>
      </ScrollView>
    </View>
  </View>
</View>
`;

exports[`<ExerciseList /> renders on error 1`] = `
<View
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    collapsable={true}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          },
          Object {
            "backgroundColor": "rgb(242, 242, 242)",
          },
        ]
      }
    >
      <Text
        style={
          Object {
            "fontSize": 72,
          }
        }
      >
        üí©
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "bottom": 0,
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <View
      pointerEvents="box-none"
      style={
        Object {
          "bottom": "100%",
          "flexDirection": "row",
          "justifyContent": "flex-end",
          "paddingBottom": 4,
          "paddingEnd": 4,
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <TouchableWithoutFeedback
        hitSlop={
          Object {
            "bottom": 4,
            "left": 4,
            "right": 4,
            "top": 4,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "rgba(250, 186, 48, 0.95)",
              },
              Object {
                "borderRadius": 14,
                "height": 28,
                "justifyContent": "center",
                "paddingHorizontal": 12,
              },
            ]
          }
        >
          <Text
            numberOfLines={1}
            style={
              Object {
                "color": "rgba(255, 255, 255, 1)",
                "fontSize": 12,
                "includeFontPadding": false,
                "lineHeight": 16,
              }
            }
          >
            Dismiss All
          </Text>
        </View>
      </TouchableWithoutFeedback>
    </View>
    <ScrollView
      data={
        Array [
          Object {
            "category": "Warning: You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. ",
            "warnings": Array [
              YellowBoxWarning {
                "message": Object {
                  "content": "Warning: You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. ",
                  "substitutions": Array [],
                },
                "stack": Array [
                  Object {
                    "arguments": Array [],
                    "column": 30,
                    "file": "/Users/linhphan/Developer/courageous-chip/node_modules/react-test-renderer/cjs/react-test-renderer.development.js",
                    "lineNumber": 120,
                    "methodName": "printWarning",
                  },
                  Object {
                    "arguments": Array [],
                    "column": 5,
                    "file": "/Users/linhphan/Developer/courageous-chip/node_modules/react-test-renderer/cjs/react-test-renderer.development.js",
                    "lineNumber": 92,
                    "methodName": "error",
                  },
                  Object {
                    "arguments": Array [],
                    "column": 9,
                    "file": "/Users/linhphan/Developer/courageous-chip/node_modules/react-test-renderer/cjs/react-test-renderer.development.js",
                    "lineNumber": 14928,
                    "methodName": "onDone",
                  },
                  Object {
                    "arguments": Array [],
                    "column": 13,
                    "file": "/Users/linhphan/Developer/courageous-chip/node_modules/react-test-renderer/cjs/react-test-renderer.development.js",
                    "lineNumber": 14967,
                    "methodName": "<unknown>",
                  },
                  Object {
                    "arguments": Array [],
                    "column": 12,
                    "file": "/Users/linhphan/Developer/courageous-chip/node_modules/promise/lib/core.js",
                    "lineNumber": 37,
                    "methodName": "tryCallOne",
                  },
                ],
                "symbolicated": Object {
                  "error": null,
                  "stack": null,
                  "status": "NONE",
                },
              },
              YellowBoxWarning {
                "message": Object {
                  "content": "Warning: You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. ",
                  "substitutions": Array [],
                },
                "stack": Array [
                  Object {
                    "arguments": Array [],
                    "column": 30,
                    "file": "/Users/linhphan/Developer/courageous-chip/node_modules/react-test-renderer/cjs/react-test-renderer.development.js",
                    "lineNumber": 120,
                    "methodName": "printWarning",
                  },
                  Object {
                    "arguments": Array [],
                    "column": 5,
                    "file": "/Users/linhphan/Developer/courageous-chip/node_modules/react-test-renderer/cjs/react-test-renderer.development.js",
                    "lineNumber": 92,
                    "methodName": "error",
                  },
                  Object {
                    "arguments": Array [],
                    "column": 9,
                    "file": "/Users/linhphan/Developer/courageous-chip/node_modules/react-test-renderer/cjs/react-test-renderer.development.js",
                    "lineNumber": 14928,
                    "methodName": "onDone",
                  },
                  Object {
                    "arguments": Array [],
                    "column": 11,
                    "file": "/Users/linhphan/Developer/courageous-chip/node_modules/react-test-renderer/cjs/react-test-renderer.development.js",
                    "lineNumber": 14984,
                    "methodName": "<unknown>",
                  },
                  Object {
                    "arguments": Array [],
                    "column": 12,
                    "file": "/Users/linhphan/Developer/courageous-chip/node_modules/promise/lib/core.js",
                    "lineNumber": 37,
                    "methodName": "tryCallOne",
                  },
                ],
                "symbolicated": Object {
                  "error": null,
                  "stack": null,
                  "status": "NONE",
                },
              },
            ],
          },
        ]
      }
      disableVirtualization={false}
      horizontal={false}
      initialNumToRender={10}
      maxToRenderPerBatch={10}
      numColumns={1}
      onEndReachedThreshold={2}
      removeClippedSubviews={false}
      scrollEnabled={false}
      scrollEventThrottle={50}
      scrollsToTop={false}
      stickyHeaderIndices={Array []}
      style={
        Object {
          "height": 48.5,
        }
      }
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View
        style={null}
      >
        <TouchableWithoutFeedback>
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(250, 186, 48, 0.95)",
                },
                Object {
                  "height": 48,
                  "justifyContent": "center",
                  "marginTop": 0.5,
                  "paddingHorizontal": 12,
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "flexDirection": "row",
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "rgba(255, 255, 255, 0.5)",
                    "fontSize": 14,
                    "includeFontPadding": false,
                    "lineHeight": 18,
                  }
                }
              >
                (2) 
              </Text>
              <Text
                numberOfLines={2}
                style={
                  Object {
                    "color": "rgba(255, 255, 255, 1)",
                    "flex": 1,
                    "fontSize": 14,
                    "includeFontPadding": false,
                    "lineHeight": 18,
                  }
                }
              >
                <Text>
                  Warning: You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. 
                </Text>
              </Text>
            </View>
          </View>
        </TouchableWithoutFeedback>
      </View>
    </ScrollView>
    <SafeAreaView
      style={
        Object {
          "backgroundColor": "rgba(250, 186, 48, 0.95)",
          "marginTop": 0.5,
        }
      }
    />
  </View>
</View>
`;
